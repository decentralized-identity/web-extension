Promise.all([import("/extension/js/modules/env.js"),import("/extension/js/modules/did.js"),import("/extension/js/did-methods/config.js"),import("/extension/js/modules/dom.js"),import("/extension/js/modules/uuid.js"),import("/extension/js/modules/browser.js"),import("/extension/js/modules/extension-messenger.js")]).then((async e=>{const i=e[0].Env,n=e[1].DID,s=(e[2].default,e[3].DOM,e[4].UUID,e[5].Browser),o=e[6].ExtensionMessenger;let t=document.createElement("script");t.type="module",t.src=i.baseUrl+"/page.js",t.async=!1,document.documentElement.prepend(t),o.addListener("requestAccess",(async e=>{let o={},t=e.data,r=t.identifier,d=await n.getConnection(e.origin);if(console.log(r,e.origin,d),!r)return{error:"No identifier access was requested and no existing identifier connection was found. All requests for access must be connected to an identifier."};if("string"==typeof r){if(d.did!==r)return{error:"No connection was found for the identifier provided."}}else if(d){if(!r.challenge)return{error:"The `challenge` parameter was missing or malformed"};o.identifier={uri:d.did,signature:await n.sign(d.did,t.challenge)}}if(console.log(o.identifier||t.datastore),o.identifier&&!t.datastore)return o;s.openWindow({url:i.baseUrl+`/views/request-did/index.html?origin=${e.origin}`,width:500,height:650,focused:!0,closeOnBlur:!0,tabData:{message:e,response:o}})}))}));
import{DOM}from"/extension/js/modules/dom.js";